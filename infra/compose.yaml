# https://github.com/apache/kafka/blob/trunk/docker/examples/docker-compose-files/single-node/plaintext/docker-compose.yml
# https://www.docker.com/blog/how-to-use-the-postgres-docker-official-image/

services:

  kafka:
    image: apache/kafka:latest
    hostname: broker
    container_name: broker    
    ports:
      - "9092:9092"
    environment: 
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://localhost:9092,PLAINTEXT://broker:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'      
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    restart: always        
    volumes:
      - kafka-data:/var/lib/kafka/data

  pgsql:
    image: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: "admin"
    restart: always        
    volumes:
      - pgsql-data:/var/lib/postgresql/data

  redis:
    image: redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --save 20 1 --loglevel warning
    restart: always        
    volumes:
      - redis-data:/data

  redisinsight:
    image: redis/redisinsight
    ports:
      - "5540:5540"
    restart: always        
    volumes:
      - redisinsight-data:/data
    depends_on:
      - redis

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: always
    ports:
      - '3000:3000'
    volumes:
      - grafana-storage:/var/lib/grafana

volumes:
  pgsql-data:
  kafka-data:
  redis-data:
  redisinsight-data:
  grafana-storage:

